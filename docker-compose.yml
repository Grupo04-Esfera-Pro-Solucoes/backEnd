version: '3.8'

services:
  # Spring Boot Application Service
  app:
    build: .
    ports:
      - "8080:8080" # Expose port 8080 for the host
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/database
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    depends_on:
      - db
      - collector-api
    networks:
      - app-network

  # MySQL Database Service
  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: database
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306" # Expose port 3306 for the host
    networks:
      - app-network
    volumes:
      - db-data:/var/lib/mysql

  # Jaeger Service for Tracing UI
  jaeger-api:
    image: jaegertracing/opentelemetry-all-in-one
    container_name: jaeger-api
    ports:
      - "16686:16686" # Expose Jaeger UI
    depends_on:
      - collector-api
    networks:
      - app-network

  # OpenTelemetry Collector Service
  collector-api:
    image: otel/opentelemetry-collector:latest
    container_name: collector-api
    volumes:
      - ./otel-config.yaml:/etc/otel-collector-config.yaml:ro
    command: ["--config=/etc/otel-collector-config.yaml"]
    ports:
      - "4317:4317"
      - "4318:4318"
      - "8889:8889"
    networks:
      - app-network

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=exemplar-storage
      - --web.enable-remote-write-receiver
    restart: always
    ports:
      - '9090:9090'
    depends_on:
      - collector-api
    networks:
      - app-network

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
    driver: local
